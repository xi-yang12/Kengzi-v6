function beta = PopulationSpeed(modelfun, beta0, beta0_as_last)
if nargin<1, selfdemo; return; end
if nargin<2
    beta0 = rand(8,1);
end
if nargin<3
    beta0_as_last = false;
end

% P = [3222302, 3672268, 4211329, 12780979, 16175667, 19174030, 24634100, 28388716, 29242000, 29545000, 29763000, 29900000];
% year = [0, 24, 63, 92, 130, 151, 178, 190, 201, 212, 226, 237];

A=[0, 9720, 0, 1665, 2668, 15202, 8869, 1384, 0, 773, 2629, 2878, 0, 2046, 28158, 25991, 11444, 26809]/100;
for i = 1:length(A)
    P(i) = sum(A(1:i));
    year(i) = (i-1) * 30 + 1;
end
P = P./max(P);
% year = year / 100

%modelfun = @(b,x)(b(2)*exp(-b(1)*x));
%modelfun = @(b,x)(b(2)*exp(-b(1)*x));
%modelfun = @(b,x)(b(1)./x);
%modelfun = @(b,x)(b(1)./x+b(3)*exp(-b(4)*x));

%beta0 = [-0.63717, 0.00000, -0.05059, 1.06997, 0.60158, 0.00855];
if beta0_as_last
    beta = beta0; 
else
    [beta, R, J, CovB, MSE, ErrorInfo]= nlinfit(year, P, modelfun, beta0);
end

% beta = [-0.5560178736860041900000000, 0.0000000000000456099472182, -0.0776364798517836930000000, 1.0103279077575851000000000, 0.7142815471318576500000000, 0.0081755400978653289000000, 0.8667345624891535900000000, 0.3562766795156316900000000];
% beta = [10.1054199074896540000000000, 0.7137986773293850700000000, 0.0081772060818563908000000, -5.5632263926913152000000000, 0.0000000000000488269454321, -0.0774602395789961150000000]
% beta = [-0.6508979186288824700000000, 0.0000000040263913460547925, -0.0481393480207649370000000, 1.0808637196853377000000000, 0.5857843961419958400000000, 0.0085944231039541720000000];
tt = min(year):0.01: max(year)+100;

% figure(1)
% plot(B, tmp);
plot(year, P, '-^r', tt, modelfun(beta, tt), '-.')
title(sprintf('The growth rates of living areas'));
xlabel('The number of living areas');
ylabel('Growth rates')
% text(150,0.2, sprintf('$y(t)=\\frac{%.2f}{1+e^{-%.2ft+%.2f}}$',beta(1), beta(2), beta(3)), 'Interpreter','latex', 'FontSize',30)
text(150,0.2, sprintf('$y(t)=\\frac{%.3f}{1+e^{-%.3ft+%.3f}}+\\frac{%.3f}{1+e^{-%.3ft+%.3f}} + %.3f$',beta(1), beta(2), beta(3),beta(4), beta(5), beta(6), beta(7)), 'Interpreter','latex', 'FontSize',18)
legend('原始数据', '拟合曲线');
axis([0 inf 0 inf])


function selfdemo
%modelfun = @(b,x)(b(2)*exp(-b(1)*x+b(3)));
%modelfun = @(b,x)(b(1)./(1+b(2)*x));
%modelfun = @(b,x)(b(1)./x+b(3)*exp(-b(2)*x+b(4)));
%modelfun = @(b,x)(b(1)./(1+exp(-b(2)*x+b(3))));
%modelfun = @(b,x)(b(1)./(b(2)+exp(-b(3)*x)));

% 双S曲线模型1, 两个S曲线相加
% beta(0) = [0.38669, 9.61711, 0.02311, 0.63195, 30768399787.04015,
% 0.06100, 0.42805, 0.51530]
% beta0 = [12.91696, 89.94612, 0.01456, -11.27878, 142.53457, 0.01657];
% beta0 = [17.86617, 95.55952, 0.01483, -16.23054, 132.35896, 0.01626];
beta0 = [-0.62559, 0.00000, -0.05296, 1.06096, 0.61560, 0.00851];
beta0 = [1.01299, 0.70833, 0.00820, -0.55979, 0.00000, -0.07552];
beta0 = [-0.6508979186288824700000000, 0.0000000040263913460547925, -0.0481393480207649370000000, 1.0808637196853377000000000, 0.5857843961419958400000000, 0.0085944231039541720000000];
beta0 = [1.0853939246137343000000000, 0.5795639597403523500000000, 0.0086099879205349377000000, -0.6565198019279991900000000, 0.0000000056964549877132863, -0.0472306425812029150000000];
% modelfun = @(b,x)(b(1)./(1+b(2)*exp(-b(3)*x)) + b(4)./(1+b(5)*exp(-b(6)*x)));

% 双S-2
beta0 = [0.3901068863697255100000000, 2.2395782809713989000000000, 0.0226464414585270530000000, 0.6133747923120422800000000, 26.9876526870336800000000000, 0.0683432168189023050000000, 0];
beta0 = [0.782944403190326, 13.337914539281151, 0.031880094171028, 0.214141493393433, 8.734206763065732, 0.076719704168716, 0.071257434679103, 0.115334741973512];
beta0 = [0.241487476655377, 7.365943709314174, 0.053007017209444, 0.773927028978269, 14.564728415501547, 0.032506691025711, 0.046911822524706, 0.056582861892988]
% beta0 = [-0.214141498114021, -8.734206151815068, -0.076719698477218, 0.782944313013441, 13.337916530859733, 0.031880099679380, 0.285398931935948, 0.837247330869809];


% beta0 = [-0.6467293392563325800000000, -24.0061730739213460000000000, -0.0608692560760417110000000, -0.2832583951879011400000000, -7.3265436308322531000000000, -0.0632530209774331000000000, 1.0152334757507975000000000, 0.4886736488448993900000000];
modelfun = @(b,x)(b(1)./(1+exp(-b(3)*x+b(2))) + b(4)./(1+exp(-b(6)*x+b(5)))+b(7));

beta = PopulationSpeed(modelfun, beta0, false);

                        

for i = 1:length(beta)
    fprintf('beta(%d) = %.15f\n', i, beta(i));
end
fprintf('%.25f, ', beta);
